public class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int total = nums1.length + nums2.length;
        if (total % 2 == 0) return findknum(nums1, 0, nums2, 0, total/2) + findknum(nums1, 0, nums2, 0, total/2 + 1);
        else return findknum(nums1, 0, nums2, 0, (total+1)/2);
    }
    
    public double findknum(int[] a, int abegin, int[]b, int bbegin, int left) {
        else if (left == 0) return Math.min(a[abegin], b[bbegin]);
        else if (a.length >= b.length) return findknum (b, bbegin, a, abegin, left);
        else if (a.length == abegin) return b[bbegin + left];
        else {
            int ap = Math.min (left/2, a.length-1);
            int bp = left - ap;
            if (a[abegin + ap] < b[bbegin + bp]) {
                return findknum(a, abegin + ap, b, bbegin, left);
            } else if (a[abegin + ap] > b[bbegin + bp]) {
                return findknum(a, abegin, b, bbegin + bp, left);
            } else return a[abegin+ap];
        }
    }
}
